/**
 * –ü—Ä–æ—Å—Ç–∞—è —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–π
 */

import { ALL_ANIMATIONS, getAnimationSource } from './animations';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
async function preload(url: string, key: string): Promise<void> {
  try {
    await fetch(url);
    console.log(`‚úÖ –ê–Ω–∏–º–∞—Ü–∏—è ${key} –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–∞`);
  } catch (error) {
    console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é ${key}:`, error);
  }
}

// –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
let isInitialized = false;

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∞–Ω–∏–º–∞—Ü–∏–π
 */
async function initPreload(): Promise<void> {
  if (isInitialized) return;
  isInitialized = true;

  console.log('üé¨ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –∞–Ω–∏–º–∞—Ü–∏–π...');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –≤ —Ñ–æ–Ω–µ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–æ–º
  Object.entries(ALL_ANIMATIONS).forEach(([key, config]) => {
    preload(config.source, key);
  });
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å URL –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ –∫–ª—é—á—É
 */
export function getAnimationUrl(key: string): string | undefined {
  return getAnimationSource(key);
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
if (typeof window !== 'undefined') {
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initPreload);
  } else {
    initPreload();
  }
}